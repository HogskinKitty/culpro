---
description: 
globs: 
alwaysApply: true
---
# Markdown 格式规范

## 基本规范

### 文件命名
- 必须使用小写字母
- 单词之间必须使用连字符（-）分隔，不允许使用下划线或空格
- 文件名应简洁明了，能够清晰表达文档内容
- 文件名长度不应超过 30 个字符
- 必须使用 .md 作为文件扩展名
- 严格遵循项目结构规范中定义的文件命名规则

```markdown
# 正确命名示例
java-basics.md
thread-safety.md
what-is-redis.md
install.md
api-reference.md
best-practices.md

# 错误命名示例
Java基础.md       # 错误：使用了中文
javaBasic.md     # 错误：使用了大写字母
java_basic.md    # 错误：使用了下划线
java basic.md    # 错误：包含空格
doc1.md          # 错误：无意义的文件名
```

### 标题层级
- 使用`#`表示标题层级
- 文档标题层级不应过深，一般控制在2-3级，最多不超过4级
  - 一级标题(`#`)：文档标题，一个文档只能有一个
  - 二级标题(`##`)：文档主要章节
  - 三级标题(`###`)：章节下的子标题
  - 四级标题(`####`)：应尽量避免使用，如必须使用，限制在特定复杂内容中
- 避免使用五级和六级标题，文档结构过深会导致阅读困难和导航不便
- 如果内容需要使用更深层级的标题，考虑将内容拆分为多个文档
- 最多使用6级标题
- 标题前后空一行
- 标题后不加标点符号

```markdown
# 一级标题

## 二级标题

### 三级标题
```

### 段落格式
- 段落之间空一行
- 段落开头不缩进
- 每行不超过100个字符
- 使用空行分隔不同的内容块

## 中英文排版

### 空格使用
1. **中英文之间**
   - 中文与英文之间需要加空格
   - 示例：`Java 是一种编程语言`

2. **中文与数字之间**
   - 中文与数字之间需要加空格
   - 示例：`2024 年 3 月 21 日`

3. **英文与标点之间**
   - 英文单词与中文标点之间不需要空格
   - 示例：`Java，Python，C++`

4. **数字与单位之间**
   - 数字与单位之间需要加空格
   - 示例：`100 MB`，`50 %`

### 标点符号
1. **中文标点**
   - 使用全角标点符号
   - 示例：`，。！？：；""''（）【】`

2. ***
   - 使用半
   - 示例：`, . ! ? : ; "" '' () []`

3. **特殊符号**
   - 数学符号使用半角
   - 示例：`+ - * / = < >`

### 代码块
1. **行内代码**
   - 使用单个反引号包裹
   - 示例：`public class Main`

2. **代码块**
   - 使用三个反引号包裹
   - 指定语言类型
   - 示例：
     ```java
     public class Main {
         public static void main(String[] args) {
             System.out.println("Hello World");
         }
     }
     ```

## 列表格式

### 无序列表
- 使用`-`、`*`或`+`作为标记
- 标记后加一个空格
- 多级列表使用两个空格缩进

```markdown
- 第一项
  - 子项1
  - 子项2
- 第二项
```

### 有序列表
- 使用数字加点作为标记
- 标记后加一个空格
- 多级列表使用两个空格缩进

```markdown
1. 第一项
   1. 子项1
   2. 子项2
2. 第二项
```

## 表格格式

### 基本规则
- 使用`|`分隔列
- 使用`-`分隔表头和内容
- 对齐方式使用`:`指定
  - 左对齐：`:---`
  - 右对齐：`---:`
  - 居中对齐：`:---:`

```markdown
| 左对齐 | 居中对齐 | 右对齐 |
|:-------|:--------:|-------:|
| 内容1  |   内容2  |  内容3 |
```

## 链接和图片

### 链接
- 使用`[文本](mdc:URL)`格式
- URL使用尖括号包裹
- 示例：`[Java官网](mdc:<https:/www.java.com>)`

### 图片
- 使用`![替代文本](mdc:图片URL)`格式
- 添加合适的替代文本
- 示例：`![Java Logo](mdc:<https:/example.com/java-logo.png>)`

## 引用和注释

### 引用
- 使用`>`作为引用标记
- 引用可以嵌套
- 示例：
  ```markdown
  > 这是一段引用
  >> 这是嵌套的引用
  ```

### 注释
- 使用HTML注释格式
- 示例：`<!-- 这是一个注释 -->`

## 特殊格式

### 强调
- 斜体：使用`*`或`_`包裹
- 粗体：使用`**`或`__`包裹
- 示例：
  ```markdown
  *斜体文本*
  **粗体文本**
  ```

### 删除线
- 使用`~~`包裹
- 示例：`~~删除的文本~~`

### 任务列表
- 使用`- [ ]`或`- [x]`格式
- 示例：
  ```markdown
  - [ ] 未完成任务
  - [x] 已完成任务
  ```
