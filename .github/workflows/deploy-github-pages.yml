# 构建 VitePress 站点并部署到 GitHub Pages
name: Deploy VitePress site to Pages

on:
  # 在 master 分支收到推送时触发工作流
  push:
    branches: [ master ]

  # 允许从 Actions 页面手动触发工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，用于 GitHub Pages 部署
permissions:
  contents: read
  pages: write
  id-token: write

# 并发控制：确保同一时间只进行一次部署
# 不取消正在进行的部署，但会跳过队列中的其他部署任务
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest
    steps:
      # 检出代码仓库
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整的 git 历史，用于生成 lastUpdated 信息

      # 安装 D2 图表工具
      - name: Install D2
        run: curl -fsSL https://d2lang.com/install.sh | sh -s --

      # 安装 TALA 布局引擎
      - name: Install Tala
        run: curl -fsSL https://d2lang.com/install.sh | sh -s -- --tala

      # 安装 pnpm 包管理器
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.5.0

      # 设置 Node.js 环境
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      # 配置 GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 安装项目依赖
      - name: Install dependencies
        run: pnpm install

      # 执行 VitePress 构建
      - name: Build with VitePress
        run: pnpm run docs:build

      # 上传构建产物
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
